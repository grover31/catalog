groups:
  - name: "Container Image"
    description: "Image to be used for container"
  - name: "Controller"
    description: "Configure workload deployment"
  - name: "Container Configuration"
    description: "additional container configuration"
  - name: "App Configuration"
    description: "App specific config options"
  - name: "Networking and Services"
    description: "Configure Network and Services for container"
  - name: "Storage and Persistence"
    description: "Persist and share data that is separate from the container"
  - name: "Ingress"
    description: "Ingress Configuration"
  - name: "Security and Permissions"
    description: "Configure security context and permissions"
  - name: "Resources and Devices"
    description: "Specify resources/devices to be allocated to workload"
  - name: "Advanced"
    description: "Advanced Configuration"
portals:
  web_portal:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      type: dict
      attrs:
        - variable: type
          description: "Please specify type of workload to deploy"
          label: "(Advanced) Controller Type"
          schema:
            type: string
            default: "deployment"
            required: true
            enum:
              - value: "deployment"
                description: "Deployment"
              - value: "statefulset"
                description: "Statefulset"
              - value: "daemonset"
                description: "Daemonset"
        - variable: replicas
          description: "Number of desired pod replicas"
          label: "Desired Replicas"
          schema:
            type: int
            default: 1
            required: true
        - variable: strategy
          description: "Please specify type of workload to deploy"
          label: "(Advanced) Update Strategy"
          schema:
            type: string
            default: "Recreate"
            required: true
            enum:
              - value: "Recreate"
                description: "Recreate: Kill existing pods before creating new ones"
              - value: "RollingUpdate"
                description: "RollingUpdate: Create new pods and then kill old ones"
              - value: "OnDelete"
                description: "(Legacy) OnDelete: ignore .spec.template changes"
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      type: dict
      attrs:
        - variable: TZ
          label: "Timezone"
          schema:
            type: string
            default: "Etc/UTC"
            $ref:
              - "definitions/timezone"
  - variable: envList
    label: "Image environment"
    group: "Container Configuration"
    schema:
      type: list
      default: []
      items:
        - variable: envItem
          label: "Environment Variable"
          schema:
            type: dict
            attrs:
              - variable: name
                label: "Name"
                schema:
                  type: string
              - variable: value
                label: "Value"
                schema:
                  type: string

  - variable: hostNetwork
    group: "Networking and Services"
    label: "Enable Host Networking"
    schema:
      type: boolean
      default: false
  - variable: externalInterfaces
    description: "External Interfaces"
    label: "(Advanced) External Interfaces"
    group: "Networking and Services"
    schema:
      type: list
      items:
        - variable: interfaceConfiguration
          description: "Interface Configuration"
          label: "Interface Configuration"
          schema:
            type: dict
            $ref:
              - "normalize/interfaceConfiguration"
            attrs:
              - variable: hostInterface
                description: "Please specify host interface"
                label: "Host Interface"
                schema:
                  type: string
                  required: true
                  $ref:
                    - "definitions/interface"
              - variable: ipam
                description: "Define how IP Address will be managed"
                label: "IP Address Management"
                schema:
                  type: dict
                  required: true
                  attrs:
                    - variable: type
                      description: "Specify type for IPAM"
                      label: "IPAM Type"
                      schema:
                        type: string
                        required: true
                        enum:
                          - value: "dhcp"
                            description: "Use DHCP"
                          - value: "static"
                            description: "Use static IP"
                        show_subquestions_if: "static"
                        subquestions:
                          - variable: staticIPConfigurations
                            label: "Static IP Addresses"
                            schema:
                              type: list
                              items:
                                - variable: staticIP
                                  label: "Static IP"
                                  schema:
                                    type: ipaddr
                                    cidr: true
                          - variable: staticRoutes
                            label: "Static Routes"
                            schema:
                              type: list
                              items:
                                - variable: staticRouteConfiguration
                                  label: "Static Route Configuration"
                                  schema:
                                    type: dict
                                    attrs:
                                      - variable: destination
                                        label: "Destination"
                                        schema:
                                          type: ipaddr
                                          cidr: true
                                          required: true
                                      - variable: gateway
                                        label: "Gateway"
                                        schema:
                                          type: ipaddr
                                          cidr: false
                                          required: true
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the service"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Service Type"
                description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System, Loadbalancer exposes the service using the system loadbalancer"
                schema:
                  type: string
                  default: "NodePort"
                  enum:
                    - value: "NodePort"
                      description: "NodePort"
                    - value: "ClusterIP"
                      description: "ClusterIP"
                    - value: "LoadBalancer"
                      description: "LoadBalancer"
              - variable: loadBalancerIP
                label: "LoadBalancer IP"
                description: "LoadBalancerIP"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: string
                  default: ""
              - variable: externalIPs
                label: "External IP's"
                description: "External IP's"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: list
                  default: []
                  items:
                    - variable: externalIP
                      label: "External IP"
                      schema:
                        type: string
              - variable: ports
                label: "Service's Port(s) Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: enabled
                            label: "Enable the port"
                            schema:
                              type: boolean
                              default: true
                              hidden: true
                          - variable: protocol
                            label: "Port Type"
                            schema:
                              type: string
                              default: "HTTP"
                              enum:
                                - value: HTTP
                                  description: "HTTP"
                                - value: "HTTPS"
                                  description: "HTTPS"
                                - value: TCP
                                  description: "TCP"
                                - value: "UDP"
                                  description: "UDP"
                          - variable: port
                            label: "Container Port"
                            schema:
                              type: int
                              default: 8091
                              editable: false
                              hidden: true
                          - variable: targetport
                            label: "Target Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 8091
                              editable: true
                              required: true
                          - variable: nodePort
                            label: "Node Port (Optional)"
                            description: "This port gets exposed to the node. Only considered when service type is NodePort"
                            schema:
                              type: int
                              min: 9000
                              max: 65535
                              default: 36022
                              required: true
        - variable: ws
          label: "WebSocket Service"
          description: "WebSocket Service"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the service"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Service Type"
                description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System, Loadbalancer exposes the service using the system loadbalancer"
                schema:
                  type: string
                  default: "ClusterIP"
                  enum:
                    - value: "NodePort"
                      description: "NodePort"
                    - value: "ClusterIP"
                      description: "ClusterIP"
                    - value: "LoadBalancer"
                      description: "LoadBalancer"
              - variable: loadBalancerIP
                label: "LoadBalancer IP"
                description: "LoadBalancerIP"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: string
                  default: ""
              - variable: externalIPs
                label: "External IP's"
                description: "External IP's"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: list
                  default: []
                  items:
                    - variable: externalIP
                      label: "External IP"
                      schema:
                        type: string
              - variable: ports
                label: "Service's Port(s) Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: ws
                      label: "WebSocket Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: enabled
                            label: "Enable the port"
                            schema:
                              type: boolean
                              default: true
                              hidden: true
                          - variable: protocol
                            label: "Port Type"
                            schema:
                              type: string
                              default: "TCP"
                              enum:
                                - value: HTTP
                                  description: "HTTP"
                                - value: "HTTPS"
                                  description: "HTTPS"
                                - value: TCP
                                  description: "TCP"
                                - value: "UDP"
                                  description: "UDP"
                          - variable: port
                            label: "Container Port"
                            schema:
                              type: int
                              default: 3000
                              editable: false
                              hidden: true
                          - variable: targetport
                            label: "Target Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 3000
                              editable: true
                              required: true
                          - variable: nodePort
                            label: "Node Port (Optional)"
                            description: "This port gets exposed to the node. Only considered when service type is NodePort"
                            schema:
                              type: int
                              min: 9000
                              max: 65535
                              default: 36023
                              required: true
  # Configure app volumes
  - variable: persistence
    label: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      type: dict
      attrs:
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the storage"
                schema:
                  type: boolean
                  default: true
              - variable: storageClass
                label: "Type of Storage"
                description: " Warning: Anything other than SCALE-ZFS will break rollback!"
                schema:
                  type: string
                  default: "SCALE-ZFS"
              - variable: mountPath
                label: "mountPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  type: string
                  default: "/usr/src/app/store"
                  hidden: true
              - variable: emptyDir
                label: "EmptyDir Volume"
                schema:
                  type: dict
                  attrs:
                    - variable: enabled
                      label: "Use emptyDir volume"
                      schema:
                        type: boolean
                        default: false
                        show_subquestions_if: true
                        subquestions:
                          - variable: medium
                            label: "EmptyDir Medium"
                            schema:
                              type: string
                              default: ""
                              enum:
                                - value: ""
                                  description: "Default"
                                - value: "Memory"
                                  description: "Memory"
              - variable: accessMode
                label: "Access Mode (Advanced)"
                description: "Allow or disallow multiple PVC's writhing to the same PVC"
                schema:
                  type: string
                  default: "ReadWriteOnce"
                  enum:
                    - value: "ReadWriteOnce"
                      description: "ReadWriteOnce"
                    - value: "ReadOnlyMany"
                      description: "ReadOnlyMany"
                    - value: "ReadWriteMany"
                      description: "ReadWriteMany"
              - variable: size
                label: "Size quotum of storage"
                schema:
                  type: string
                  default: "100Gi"
  - variable: hostPathMounts
    label: "Custom app storage"
    group: "Storage and Persistence"
    schema:
      type: list
      default: []
      items:
        - variable: volumeMount
          label: "Custom Storage"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enabled"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: setPermissions
                label: "Automatic Permissions"
                description: "Automatically set permissions on install"
                schema:
                  type: boolean
                  default: true
              - variable: readOnly
                label: "Mount as ReadOnly"
                description: "prevent any write from being done to the mounted volume"
                schema:
                  type: boolean
                  default: false
              - variable: emptyDir
                label: "EmptyDir Volume"
                schema:
                  type: dict
                  attrs:
                    - variable: enabled
                      label: "Use emptyDir volume"
                      schema:
                        type: boolean
                        default: false
                    - variable: medium
                      label: "EmptyDir Medium"
                      schema:
                        type: string
                        default: ""
                        enum:
                          - value: ""
                            description: "Default"
                          - value: "Memory"
                            description: "Memory"
              - variable: mountPath
                label: "Mount Path"
                description: "Path to mount inside the pod"
                schema:
                  type: path
                  required: true
                  default: ""
                  editable: true
              - variable: hostPath
                label: "Host Path"
                description: "Path on the host to mount inside the container, ignored when emptyDir is enabled"
                schema:
                  type: hostpath
                  required: true
  - variable: deviceMounts
    label: "Mount Devices"
    group: "Resources and Devices"
    schema:
      type: list
      default: []
      items:
        - variable: deviceMount
          label: "Custom Storage"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enabled"
                schema:
                  type: boolean
                  default: true
                  required: true
                  hidden: true
                  editable: false
              - variable: emptyDir
                label: "EmptyDir Volume"
                schema:
                  type: dict
                  attrs:
                    - variable: enabled
                      label: "Use emptyDir volume"
                      schema:
                        type: boolean
                        default: false
                        show_subquestions_if: true
                        subquestions:
                          - variable: medium
                            label: "EmptyDir Medium"
                            schema:
                              type: string
                              default: ""
                              enum:
                                - value: ""
                                  description: "Default"
                                - value: "Memory"
                                  description: "Memory"
              - variable: devicePath
                label: "Device Path"
                description: "Path to the device to mount inside the container"
                schema:
                  type: path
                  required: true
                  default: "/dev/ttyACM0"
                  editable: true
  # Enable privileged
  - variable: securityContext
    group: "Security and Permissions"
    label: "Security Context"
    schema:
      type: dict
      attrs:
        - variable: privileged
          label: "Enable privileged mode for Common-Chart based charts"
          schema:
            type: boolean
            default: false
  # Set Pod Security Policy
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      type: dict
      attrs:
        - variable: runAsNonRoot
          label: "runAsNonRoot"
          schema:
            type: boolean
            default: true
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
        - variable: fsGroupChangePolicy
          label: "When should we take ownership?"
          schema:
            type: string
            default: "OnRootMismatch"
            enum:
              - value: "OnRootMismatch"
                description: "OnRootMismatch"
              - value: "Always"
                description: "Always"
  - variable: resources
    group: "Resources and Devices"
    label: ""
    schema:
      type: dict
      attrs:
        - variable: limits
          label: "Advanced Limit Resource Consumption"
          schema:
            type: dict
            attrs:
              - variable: cpu
                label: "CPU"
                schema:
                  type: string
                  default: "2000m"
              - variable: memory
                label: "Memory RAM"
                schema:
                  type: string
                  default: "2Gi"
        - variable: requests
          label: "Advanced Request minimum resources required"
          schema:
            type: dict
            attrs:
              - variable: cpu
                label: "CPU"
                schema:
                  type: string
                  default: "10m"
              - variable: memory
                label: "Memory RAM"
                schema:
                  type: string
                  default: "50Mi"
